swagger: '2.0'
info:
  version: '0.1.0'
  title: Management Users
  description: An API to manage the different user
host: localhost:8080
basePath: /api
schemes:
  - http

paths:
  /login:
    post:
      description: login for user
      operationId: loginUser
      consumes:
        - application/json
      parameters:
        - name: credentials
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserLogin'
      responses:
        '200':
          description: loggin seccessful
          schema:
            description: JWT Token
            type: string
        '400':
          description: Invalid email/password

  /users:
    post:
      security:
        - Bearer: []
      description: create a new user
      operationId: createUser
      consumes:
        - application/json
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: User created
        '403':
          description: Only admin can create a user

  /users/{email}:
    patch:
      security:
        - Bearer: []
      description: Update user password if exist
      operationId: updateUser
      consumes:
        - application/json
      parameters:
        - name: email
          in: path
          required: true
          type: string
        - name: password
          in: body
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
      responses:
        '201':
          description: User password updated
        '403':
          description: Only admin can update a user
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      administrator:
        type: boolean
  UserLogin:
    type: object
    properties:
      email:
        type: string
      password:
        type: string